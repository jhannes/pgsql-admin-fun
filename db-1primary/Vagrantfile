# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/trusty64"

  config.vm.hostname = "jb-psqldb-01-primary"
  config.vm.network "private_network", ip: "192.168.100.101"

  config.vm.synced_folder "../lib", "/shared"

  config.vm.provision "shell", :inline => <<-SHELL
    apt-get -y upgrade
    apt-get -y install postgresql-9.3
    cp /shared/ssh-vagrant/* ~vagrant/.ssh/
    chmod 600 ~vagrant/.ssh/*
    chown vagrant ~vagrant/.ssh/*
    cp /shared/ssh-root/* ~root/.ssh/
    chmod 600 ~root/.ssh/*
    chown root ~root/.ssh/*
    ssh-keyscan 192.168.100.101 >> ~/.ssh/known_hosts

    echo "host all all 0.0.0.0/0 md5" >> /etc/postgresql/9.3/main/pg_hba.conf
    echo "host  replication   all   192.168.100.0/24      trust" >> /etc/postgresql/9.3/main/pg_hba.conf

    sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/" /etc/postgresql/9.3/main/postgresql.conf
    sed -i "s/#wal_level = minimal/wal_level = hot_standby/" /etc/postgresql/9.3/main/postgresql.conf
    sed -i "s/#max_wal_senders = 0/max_wal_senders = 3/" /etc/postgresql/9.3/main/postgresql.conf

    echo "alter user postgres with password 'postgres'" | sudo -u postgres psql
    echo "create user testdb with password 'testdb'; create database testdb owner testdb" | sudo -u postgres psql

    bunzip2 --stdout /shared/db/testdb/testdb-latest.dmp.bz2 | sudo -u postgres pg_restore --clean --create --dbname=postgres
    service postgresql stop
    ssh 192.168.100.101 service postgresql stop
    rsync -av --exclude pg_xlog --exclude postgresql.conf /var/lib/postgresql/9.3/main/ 192.168.100.101:/var/lib/postgresql/9.3/main/
    ssh 192.168.100.101 service postgresql start
    service postgresql start
  SHELL
end
